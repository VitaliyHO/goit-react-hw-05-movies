{"version":3,"file":"static/js/597.3f09011f.chunk.js","mappings":"6kBAGaA,EAAYC,EAAAA,GAAAA,IAAU,qGAOtBC,EAASD,EAAAA,GAAAA,OAAa,2TAYtBE,EAAOF,EAAAA,GAAAA,KAAW,sEAKlBG,EAAUH,EAAAA,GAAAA,IAAU,8DAKpBI,EAAMJ,EAAAA,GAAAA,IAAU,8CAIhBK,EAAYL,EAAAA,GAAAA,IAAU,0DAItBM,EAAON,EAAAA,GAAAA,KAAW,+CAIlBO,EAAQP,EAAAA,GAAAA,MAAY,mEAKpBQ,EAAKR,EAAAA,GAAAA,GAAS,sDAIdS,GAAOT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAe,2XAmBtBW,GAAWX,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAe,qEAK1BY,EAASZ,EAAAA,GAAAA,OAAa,sWAmBtBa,EAAKb,EAAAA,GAAAA,GAAS,2JAQdc,EAAKd,EAAAA,GAAAA,GAAS,gvCAsDde,EAAUf,EAAAA,GAAAA,IAAU,iOAYpBgB,EAAMhB,EAAAA,GAAAA,IAAU,2D,sFC3I7B,UA1Ba,WACX,IAEA,GAAwBiB,EAAAA,EAAAA,UAAS,IAAG,eAA7BC,EAAI,KAAEC,EAAO,KACZC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GAASI,KAAKL,EAChC,GAAG,CAACC,KAGF,iCACE,kCACA,wBACGF,EAAKO,KAAI,SAACC,GAAK,OACd,0BACGA,EAAMC,cAAe,SAAC,KAAG,CAACC,IAfhB,kCAeoCF,EAAMC,aAAcE,IAAI,MAAQ,2CAC/E,wBAAKH,EAAMI,QACX,uCAAeJ,EAAMK,eAHdL,EAAMM,GAIV,QAKf,C,qLC3BAC,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAgB,yCAAG,2GACGF,EAAAA,GAAAA,IAAU,+BAAD,OAAgCC,IAAW,KAAD,EAA9D,OAA8D,SAArEE,EAAO,EAAbC,KAAMD,QAAO,kBACbA,GAAO,2CACjB,kBAH4B,mCAKhBE,EAAY,yCAAG,WAAMN,GAAE,8FACXC,EAAAA,GAAAA,IAAU,UAAD,OAAWD,EAAE,oBAAYE,EAAO,oBAAmB,KAAD,EAArE,OAAqE,SAAzEG,EAAI,EAAJA,KAAI,kBACJA,GAAI,2CACd,gBAHwB,sCAKZE,EAAe,yCAAG,WAAMC,GAAK,8FACPP,EAAAA,GAAAA,IAAU,yBAAD,OAA0BC,EAAO,kBAAUM,EAAK,+CAA8C,KAAD,EAAjH,OAAiH,SAAxHJ,EAAO,EAAbC,KAAMD,QAAO,kBACbA,GAAO,2CACjB,gBAH2B,sCAKfb,EAAe,yCAAG,WAAMS,GAAE,8FACPC,EAAAA,GAAAA,IAAU,UAAD,OAAWD,EAAE,4BAAoBE,EAAO,oBAAmB,KAAD,EAA9E,OAA8E,SAAlFhB,EAAI,EAAVmB,KAAMnB,KAAI,kBACVA,GAAI,2CACd,gBAH2B,sCAKfuB,EAAe,yCAAG,WAAMT,GAAE,8FACJC,EAAAA,GAAAA,IAAU,UAAD,OAAWD,EAAE,4BAAoBE,EAAO,2BAA0B,KAAD,EAArF,OAAqF,SAA5FE,EAAO,EAAbC,KAAMD,QAAO,kBACbA,GAAO,2CACjB,gBAH2B,qC","sources":["App.styled.js","components/Cast.jsx","servises/api.js"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const Container = styled.div`\r\n  max-width: 1080px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  padding: 0 16px;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  padding: 15px 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  gap: 12px;\r\n  margin-bottom: 16px;\r\n  border-bottom: 2px solid #676362;\r\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 30px 60px -12px inset,\r\n    rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset;\r\n`;\r\n\r\nexport const Main = styled.main`\r\n  padding: 20px 10px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const FlexBox = styled.div`\r\n  display: flex;\r\n  padding: 10px 0;\r\n`;\r\n\r\nexport const Box = styled.div`\r\n  padding: 5px 20px;\r\n`;\r\n\r\nexport const BorderBox = styled.div`\r\n  border-bottom: 2px solid grey;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  text-align: center;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  margin-right: 15px;\r\n  font-size: 24px;\r\n`;\r\n\r\nexport const H1 = styled.h1`\r\n  text-transform: uppercase;\r\n`;\r\n\r\nexport const Link = styled(NavLink)`\r\n  padding: 8px 12px;\r\n  margin-right: 15px;\r\n  color: #000;\r\n  text-decoration: none;\r\n  border-radius: 4px;\r\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\r\n    rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\r\n    rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\r\n\r\n  &:hover {\r\n    color: #3a7223;\r\n  }\r\n\r\n  &.active {\r\n    background: #ff5733;\r\n  }\r\n`;\r\n\r\nexport const ListLink = styled(NavLink)`\r\n  text-decoration: none;\r\n  color: #2e2e2e;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  padding 4px 8px;\r\n  border-radius: 4px;\r\n  border: none;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  color: #184a44;\r\n  background: rgba(255,87,51, .5);\r\n\r\n  transition-property: background;\r\n  transition-duration: 250ms;\r\n  transition-timing-function: linear;\r\n  transition-delay: 0;\r\n\r\n  &:hover {\r\n    background: #ff5733;\r\n  }\r\n`;\r\n\r\nexport const Ul = styled.ul`\r\n  list-style: none;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr;\r\n  grid-column-gap: 10px;\r\n  grid-row-gap: 70px;\r\n`;\r\n\r\nexport const Li = styled.li`\r\n  &:nth-child(4n + 1) img {\r\n    transform: perspective(400px) rotateY(10deg) rotateX(5deg);\r\n\r\n    transition-property: rotateY();\r\n    transition-duration: 300ms;\r\n    transition-timing-function: linear;\r\n    transition-delay: 0;\r\n\r\n    &:hover {\r\n      transform: rotateY(0deg);\r\n    }\r\n  }\r\n\r\n  &:nth-child(4n + 2) img {\r\n    transform: perspective(400px) rotateY(5deg) scale(0.92) rotateX(5deg);\r\n\r\n    transition-property: rotateY() scale();\r\n    transition-duration: 500ms;\r\n    transition-timing-function: linear;\r\n    transition-delay: 0;\r\n\r\n    &:hover {\r\n      transform: rotateY(0deg) scale(1);\r\n    }\r\n  }\r\n\r\n  &:nth-child(4n + 3) img {\r\n    transform: perspective(400px) rotateY(-5deg) scale(0.92) rotateX(5deg);\r\n\r\n    transition-property: rotateY() scale();\r\n    transition-duration: 500ms;\r\n    transition-timing-function: linear;\r\n    transition-delay: 0;\r\n\r\n    &:hover {\r\n      transform: rotateY(0deg) scale(1);\r\n    }\r\n  }\r\n\r\n  &:nth-child(4n) img {\r\n    transform: perspective(400px) rotateY(-10deg) rotateX(5deg);\r\n\r\n    transition-property: rotateY();\r\n    transition-duration: 500ms;\r\n    transition-timing-function: linear;\r\n    transition-delay: 0;\r\n\r\n    &:hover {\r\n      transform: rotateY(0deg);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ImgList = styled.img`\r\n  display: block;\r\n  width: 100%;\r\n  height: 90%;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 0px 15px 0px rgba(0, 0, 0, 1);\r\n\r\n  &:hover {\r\n    box-shadow: 0px 0px 25px 0px rgba(255, 87, 51, 1);\r\n  }\r\n`;\r\n\r\nexport const IMG = styled.img`\r\n  display: block;\r\n  width: 300px;\r\n`;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { IMG } from \"../App.styled\";\r\nimport { getMovieCredits } from \"../servises/api\";\r\n\r\nconst Cast = () => {\r\n  const BASE_IMG_URL = \"https://image.tmdb.org/t/p/w500\";\r\n\r\n  const [cast, setCast] = useState([]);\r\n  const { movieId } = useParams();\r\n\r\n  useEffect(() => {\r\n    getMovieCredits(movieId).then(setCast);\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      <h2>Cast</h2>\r\n      <ul>\r\n        {cast.map((actor) => (\r\n          <li key={actor.id}>\r\n            {actor.profile_path ? <IMG src={BASE_IMG_URL + actor.profile_path} alt=\"\" /> : <p>No actor image</p>}\r\n            <h4>{actor.name}</h4>\r\n            <p>Character: {actor.character}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cast;","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = '027147d74224684ab0a3206ed50b1636' ;\r\n\r\nexport const getTrendingFilms = async() => {\r\n    const {data:{results}} = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\r\n    return results;\r\n};\r\n\r\nexport const getFilmsById = async(id) => {\r\n    const {data} = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\r\n    return data;\r\n};\r\n\r\nexport const getFilmsByQuery = async(query) => {\r\n    const {data:{results}} = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`);\r\n    return results;\r\n};\r\n\r\nexport const getMovieCredits = async(id) => {\r\n    const {data:{cast}} = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\r\n    return cast;\r\n};\r\n\r\nexport const getMovieReviews = async(id) => {\r\n    const {data:{results}} = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\r\n    return results;\r\n};\r\n\r\n"],"names":["Container","styled","Header","Main","FlexBox","Box","BorderBox","Form","Input","H1","Link","NavLink","ListLink","Button","Ul","Li","ImgList","IMG","useState","cast","setCast","movieId","useParams","useEffect","getMovieCredits","then","map","actor","profile_path","src","alt","name","character","id","axios","API_KEY","getTrendingFilms","results","data","getFilmsById","getFilmsByQuery","query","getMovieReviews"],"sourceRoot":""}